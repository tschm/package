# This file is part of the tschm/.config-templates repository
# (https://github.com/tschm/.config-templates).
#
# Workflow: Continuous Integration
# Purpose: This workflow runs tests on multiple Python versions to ensure
#          compatibility and code quality across different environments.
#
# Trigger: This workflow runs on every push
#
# Components:
#   - ðŸ§ª Run tests on multiple Python versions
#   - ðŸ”„ Matrix strategy for testing on different environments

name: "CI"

on:
- push

permissions:
  contents: read

jobs:
  test:
    # if: github.repository != 'tschm/.config-templates'
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # mongo container action only supported on Linux
        os: [ ubuntu-latest ]
        python-version: [ '3.11', '3.12', '3.13' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # This installs Python and uv for faster dependency management
      - name: Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v6  # Official action for setting up uv
        with:
          python-version: ${{ matrix.python-version }}  # Use the specified Python version

      - name: Install jinja2-cli
        run: |
          pip install jinja2-cli[yaml,toml]

      - name: Render all .jinja files
        run: |
          for f in $(find . -name "*.jinja"); do
            out="${f%.jinja}"   # remove .jinja suffix
            echo "Rendering $f to $out"
            jinja2 "$f" values.yml > "$out"
          done

      - name: Render all {{ }} folders
        run: |
          # Find all directories with {{ ... }} in their names
          find . -type d -name '{{*}}' | while IFS= read -r dir; do
            # Render the folder name using jinja-cli
            new_dir=$(jinja2 <<< "$dir" values.yml)
    
            # Skip if the folder already exists with that name
            if [ "$dir" != "$new_dir" ]; then
              echo "Renaming folder $dir â†’ $new_dir"
              mv "$dir" "$new_dir"
            fi
          done

      # task is needed as we test the taskfiles
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the virtual environment
        run: uv venv

      - name: "Build the virtual environment for ${{ github.repository }}"
        if: hashFiles('pyproject.toml') != ''
        run:
          uv sync --all-extras

      - name: "Display the folder structure"
        run: |
          tree -L 2

      - name: "Run the tests"
        run: |
          uv pip install pytest
          uv run pytest tests
