# Workflow to build and release project artifacts
# This workflow is manually triggered via the GitHub UI

name: Build and Release

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3)'
        required: true
        type: string

# Permissions needed for the workflow
permissions:
  contents: write  # Allows the workflow to write to the repository (create tags)
  packages: write  # Allows the workflow to write to GitHub Packages (for Docker images)

jobs:
  # Job to set the tag based on input
  tagging:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ github.event.inputs.tag }}  # Output the tag to be used by other jobs

    steps:
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4  # Check out the repository code

      - name: Create and Push Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "${{ github.event.inputs.tag }}" -m "Release ${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

  # Job to build the package with the new version
  build:
    runs-on: ubuntu-latest
    needs: tagging  # Depends on the tagging job to get the new version
    steps:
      # Build the package (sdist and wheel) with the new version tag
      - name: build
        uses: tschm/cradle/actions/build@v0.3.06
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.tagging.outputs.new_tag }}  # Use the tag from the previous job


  # Uncomment the following section if you have activated PyPI publishing for your project
  # To activate PyPI publishing:
  # 1. Create a PyPI account and register your project
  # 2. Set up a GitHub environment named 'release' with PyPI publishing secrets
  # 3. Configure trusted publishing between GitHub and PyPI
  # For more information, see: https://docs.pypi.org/trusted-publishers/

  #  # Job to publish the built package to PyPI
  #  publish:
  #    needs: build  # Depends on the build job to have the package ready
  #    runs-on: ubuntu-latest
  #    environment: release  # Use the 'release' environment for secrets
  #
  #    # Permissions needed for PyPI trusted publishing
  #    permissions:
  #      contents: read  # Only need read access to the repository
  #      id-token: write  # Required for trusted publishing to PyPI
  #
  #    steps:
  #      # Check out the repository code
  #      - name: Checkout [${{ github.repository }}]
  #        uses: actions/checkout@v4
  #
  #      # Download the built package artifacts from the build job
  #      - uses: actions/download-artifact@v4
  #        with:
  #          name: dist  # Artifact name containing the built packages
  #          path: dist  # Local path to download to
  #
  #      # Step: Publish the package to PyPI using the official PyPA action
  #      - name: Publish to PyPI
  #        uses: pypa/gh-action-pypi-publish@release/v1
